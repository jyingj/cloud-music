#----------------------------------------------------------------------------------------------------
# 常规
#----------------------------------------------------------------------------------------------------
# 服务启动端口
server.port=10004
# 指定此实例的ip
eureka.instance.ip-address=127.0.0.1
# 使用ip的方式连接注册中心,而不是使用主机名
eureka.instance.prefer-ip-address=true

#----------------------------------------------------------------------------------------------------
# 属性覆盖
#----------------------------------------------------------------------------------------------------
spring.cloud.config.overrideSystemProperties=true
spring.cloud.config.allowOverride=true
spring.cloud.config.overrideNone=true

#----------------------------------------------------------------------------------------------------
# 注册中心
#----------------------------------------------------------------------------------------------------
# 指定服务注册中心的位置
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:10001/eureka/


spring.cloud.loadbalancer.retry.enabled=true
# 命令执行超时时间，默认1000ms
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 35000

##############################连接池#################################
spring.datasource.type= com.alibaba.druid.pool.DruidDataSource
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/music?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.platform = mysql
#初始化大小、最小、最大  
spring.datasource.initial-size = 1
spring.datasource.max-active = 20
spring.datasource.max-idle = 30
spring.datasource.min-idle = 5
spring.datasource.max-wait = 60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.time-between-eviction-runs-millis = 60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.min-evictable-idle-time-millis = 300000
spring.datasource.validation-query = SELECT 'x'
spring.datasource.test-while-idle = true
spring.datasource.test-on-borrow = false
spring.datasource.test-on-return = false
spring.datasource.pool-prepared-statements = false
spring.datasource.max-open-prepared-statements = 20